package org_idp_github

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

func GetResource() *schema.Resource {
	return &schema.Resource{
		Description: "Resource representing a OIDC IDP of the organization.",
		Schema: map[string]*schema.Schema{
			orgIDVar: {
				Type:        schema.TypeString,
				Required:    true,
				Description: "ID of the organization",
				ForceNew:    true,
			},
			nameVar: {
				Type:        schema.TypeString,
				Required:    true,
				Description: "Name of the IDP",
			},
			clientIDVar: {
				Type:        schema.TypeString,
				Required:    true,
				Description: "client id generated by the identity provider",
				Sensitive:   true,
			},
			clientSecretVar: {
				Type:        schema.TypeString,
				Required:    true,
				Description: "client secret generated by the identity provider",
				Sensitive:   true,
			},
			scopesVar: {
				Type: schema.TypeSet,
				Elem: &schema.Schema{
					Type: schema.TypeString,
				},
				Required:    true,
				Description: "the scopes requested by ZITADEL during the request on the identity provider",
			},
			isLinkingAllowedVar: {
				Type:        schema.TypeBool,
				Required:    true,
				Description: "enable if users should be able to link an existing ZITADEL user with an external account",
			},
			isCreationAllowedVar: {
				Type:        schema.TypeBool,
				Required:    true,
				Description: "enable if users should be able to create a new account in ZITADEL when using an external account",
			},
			isAutoCreationVar: {
				Type:        schema.TypeBool,
				Required:    true,
				Description: "enable if a new account in ZITADEL should be created automatically when login with an external account",
			},
			isAutoUpdateVar: {
				Type:        schema.TypeBool,
				Required:    true,
				Description: "enable if a the ZITADEL account fields should be updated automatically on each login",
			},
		},
		ReadContext:   read,
		UpdateContext: update,
		CreateContext: create,
		DeleteContext: delete,
		Importer:      &schema.ResourceImporter{StateContext: schema.ImportStatePassthroughContext},
	}
}
